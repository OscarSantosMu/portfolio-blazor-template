<div class="list-group mt-4 mx-5">
  <div class="list-group-item list-group-item-action">
    <div class="d-flex w-100 justify-content-between">
      <h5 class="mb-1">Step 1</h5>
      <div class="form-check">
        <input class="form-check-input" type="checkbox" @bind="items[0].IsChecked" id="flexCheckCheck">
        <label class="form-check-label" for="flexCheckCheck">
          Done
      </label>
      </div>
    </div>
    <p class="mb-1">Fork the GitHub repo.
    </p>
    <small><a href=" https://github.com/OscarSantosMu/portfolio-blazor-template/fork" target="_blank">You can do it
        directly
        from here</a>.</small>
  </div>
  <div class="list-group-item list-group-item-action">
    <div class="d-flex w-100 justify-content-between">
      <h5 class="mb-1">Step 2</h5>
      <div class="form-check">
        <input class="form-check-input" type="checkbox" @bind="items[1].IsChecked" id="flexCheckCheck">
        <label class="form-check-label" for="flexCheckCheck">
          Done
        </label>
      </div>
    </div>
    <p class="mb-1">Open your Git repository in VS, VSCode or GitHub Codespaces.</p>
    <small class="text-muted">In your GitHub repository, click on &nbsp<button class="btn-github">&lt;&gt; Code
        â–¼</button>&nbsp and choose either Local or Codespaces.</small>
  </div>
  <div class="list-group-item list-group-item-action">
    <div class="d-flex w-100 justify-content-between">
      <h5 class="mb-1">Step 3</h5>
      <div class="form-check">
        <input class="form-check-input" type="checkbox" @bind="items[2].IsChecked" id="flexCheckCheck">
        <label class="form-check-label" for="flexCheckCheck">
          Done
      </label>
      </div>
    </div>
    <p class="mb-1">Replace your information in the resume.json file.</p>
    <small class="text-muted">Currently, the <a href="sample-data/resume.json" target="_blank">resume.json</a> is a static
      file, you could instead store this file in a NoSQL database and create an API to handle the requests.</small>
  </div>
  <div class="list-group-item list-group-item-action">
    <div class="d-flex w-100 justify-content-between">
      <h5 class="mb-1">Step 4</h5>
      <div class="form-check">
        <input class="form-check-input" type="checkbox" @bind="items[3].IsChecked" id="flexCheckCheck">
        <label class="form-check-label" for="flexCheckCheck">
          Done
      </label>
      </div>
    </div>
    <p class="mb-1">Modify app.css to fit the template to your needs.</p>
    <small class="text-muted">Replace <a href="css/app.css" target="_blank">app.css</a></small>
  </div>
  <div class="list-group-item list-group-item-action">
    <div class="d-flex w-100 justify-content-between">
      <h5 class="mb-1">Step 5</h5>
      <div class="form-check">
        <input class="form-check-input" type="checkbox" @bind="items[4].IsChecked" id="flexCheckCheck">
        <label class="form-check-label" for="flexCheckCheck">
          Done
        </label>
      </div>
    </div>
    <p class="mb-1">Deploy your app!</p>
    <small class="text-muted">Choose any platform of your choice. Just make sure to include a step to run <a href="https://github.com/OscarSantosMu/portfolio-blazor-template/blob/main/src/Scripts/remove-instructions.sh">remove-instructions.sh</a> on your CI/CD pipeline.</small>
  </div>
</div>

@if (items.All(x => x.IsChecked))
{
    <p>All checkboxes are checked!</p>
    OnAllChecked.InvokeAsync(true);
}

@code {

    [Parameter]
    public EventCallback<bool> OnAllChecked { get; set; }
    private List<Item> items = new List<Item>
    {
        new Item { Id = 1 },
        new Item { Id = 2 },
        new Item { Id = 3 },
        new Item { Id = 4 },
        new Item { Id = 5 }
    };

    private class Item
    {
        public int Id { get; set; }
        public bool IsChecked { get; set; }
    }
}